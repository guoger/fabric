// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderer/etcdraft/configuration.proto

package etcdraft // import "github.com/hyperledger/fabric/protos/orderer/etcdraft"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Metadata is serialized and set as the value of ConsensusType.Metadata in
// a channel configuration when the ConsensusType.Type is set "etcdraft".
type Metadata struct {
	Consenters           []*Consenter `protobuf:"bytes,1,rep,name=consenters" json:"consenters,omitempty"`
	Options              *Options     `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_configuration_43f983f36bc85e7a, []int{0}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetConsenters() []*Consenter {
	if m != nil {
		return m.Consenters
	}
	return nil
}

func (m *Metadata) GetOptions() *Options {
	if m != nil {
		return m.Options
	}
	return nil
}

// Consenter represents a consenting node (i.e. replica).
type Consenter struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	ClientTlsCert        []byte   `protobuf:"bytes,3,opt,name=client_tls_cert,json=clientTlsCert,proto3" json:"client_tls_cert,omitempty"`
	ServerTlsCert        []byte   `protobuf:"bytes,4,opt,name=server_tls_cert,json=serverTlsCert,proto3" json:"server_tls_cert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consenter) Reset()         { *m = Consenter{} }
func (m *Consenter) String() string { return proto.CompactTextString(m) }
func (*Consenter) ProtoMessage()    {}
func (*Consenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_configuration_43f983f36bc85e7a, []int{1}
}
func (m *Consenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consenter.Unmarshal(m, b)
}
func (m *Consenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consenter.Marshal(b, m, deterministic)
}
func (dst *Consenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consenter.Merge(dst, src)
}
func (m *Consenter) XXX_Size() int {
	return xxx_messageInfo_Consenter.Size(m)
}
func (m *Consenter) XXX_DiscardUnknown() {
	xxx_messageInfo_Consenter.DiscardUnknown(m)
}

var xxx_messageInfo_Consenter proto.InternalMessageInfo

func (m *Consenter) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Consenter) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Consenter) GetClientTlsCert() []byte {
	if m != nil {
		return m.ClientTlsCert
	}
	return nil
}

func (m *Consenter) GetServerTlsCert() []byte {
	if m != nil {
		return m.ServerTlsCert
	}
	return nil
}

// Options to be specified for all the etcd/raft nodes. These can be modified on a
// per-channel basis.
type Options struct {
	TickInterval         uint64   `protobuf:"varint,1,opt,name=tick_interval,json=tickInterval" json:"tick_interval,omitempty"`
	ElectionTick         uint32   `protobuf:"varint,2,opt,name=election_tick,json=electionTick" json:"election_tick,omitempty"`
	HeartbeatTick        uint32   `protobuf:"varint,3,opt,name=heartbeat_tick,json=heartbeatTick" json:"heartbeat_tick,omitempty"`
	MaxInflightMsgs      uint32   `protobuf:"varint,4,opt,name=max_inflight_msgs,json=maxInflightMsgs" json:"max_inflight_msgs,omitempty"`
	MaxSizePerMsg        uint64   `protobuf:"varint,5,opt,name=max_size_per_msg,json=maxSizePerMsg" json:"max_size_per_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Options) Reset()         { *m = Options{} }
func (m *Options) String() string { return proto.CompactTextString(m) }
func (*Options) ProtoMessage()    {}
func (*Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_configuration_43f983f36bc85e7a, []int{2}
}
func (m *Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Options.Unmarshal(m, b)
}
func (m *Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Options.Marshal(b, m, deterministic)
}
func (dst *Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Options.Merge(dst, src)
}
func (m *Options) XXX_Size() int {
	return xxx_messageInfo_Options.Size(m)
}
func (m *Options) XXX_DiscardUnknown() {
	xxx_messageInfo_Options.DiscardUnknown(m)
}

var xxx_messageInfo_Options proto.InternalMessageInfo

func (m *Options) GetTickInterval() uint64 {
	if m != nil {
		return m.TickInterval
	}
	return 0
}

func (m *Options) GetElectionTick() uint32 {
	if m != nil {
		return m.ElectionTick
	}
	return 0
}

func (m *Options) GetHeartbeatTick() uint32 {
	if m != nil {
		return m.HeartbeatTick
	}
	return 0
}

func (m *Options) GetMaxInflightMsgs() uint32 {
	if m != nil {
		return m.MaxInflightMsgs
	}
	return 0
}

func (m *Options) GetMaxSizePerMsg() uint64 {
	if m != nil {
		return m.MaxSizePerMsg
	}
	return 0
}

// Metadata to be stored with a block in order to reconstruct the state for etcd/raft.
type BlockMetaData struct {
	Index                uint64   `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockMetaData) Reset()         { *m = BlockMetaData{} }
func (m *BlockMetaData) String() string { return proto.CompactTextString(m) }
func (*BlockMetaData) ProtoMessage()    {}
func (*BlockMetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_configuration_43f983f36bc85e7a, []int{3}
}
func (m *BlockMetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMetaData.Unmarshal(m, b)
}
func (m *BlockMetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMetaData.Marshal(b, m, deterministic)
}
func (dst *BlockMetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMetaData.Merge(dst, src)
}
func (m *BlockMetaData) XXX_Size() int {
	return xxx_messageInfo_BlockMetaData.Size(m)
}
func (m *BlockMetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMetaData.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMetaData proto.InternalMessageInfo

func (m *BlockMetaData) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func init() {
	proto.RegisterType((*Metadata)(nil), "etcdraft.Metadata")
	proto.RegisterType((*Consenter)(nil), "etcdraft.Consenter")
	proto.RegisterType((*Options)(nil), "etcdraft.Options")
	proto.RegisterType((*BlockMetaData)(nil), "etcdraft.BlockMetaData")
}

func init() {
	proto.RegisterFile("orderer/etcdraft/configuration.proto", fileDescriptor_configuration_43f983f36bc85e7a)
}

var fileDescriptor_configuration_43f983f36bc85e7a = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x41, 0x6f, 0xd3, 0x40,
	0x10, 0x85, 0x65, 0x92, 0xd2, 0x76, 0x1b, 0x53, 0xba, 0x70, 0xf0, 0x31, 0x0a, 0x14, 0x22, 0x90,
	0x6c, 0xa9, 0x15, 0x7f, 0xa0, 0xe5, 0xd2, 0x43, 0x04, 0x32, 0x3d, 0x71, 0xb1, 0x36, 0xeb, 0xc9,
	0x7a, 0x95, 0xb5, 0xd7, 0x9a, 0x9d, 0x56, 0xa1, 0x57, 0x7e, 0x20, 0x7f, 0x09, 0xed, 0xae, 0x9d,
	0x46, 0xbd, 0xad, 0xdf, 0xfb, 0xde, 0xe8, 0x59, 0x33, 0xec, 0xa3, 0xc5, 0x1a, 0x10, 0xb0, 0x00,
	0x92, 0x35, 0x8a, 0x0d, 0x15, 0xd2, 0x76, 0x1b, 0xad, 0x1e, 0x50, 0x90, 0xb6, 0x5d, 0xde, 0xa3,
	0x25, 0xcb, 0x4f, 0x46, 0x77, 0x61, 0xd8, 0xc9, 0x0a, 0x48, 0xd4, 0x82, 0x04, 0xbf, 0x66, 0x4c,
	0xda, 0xce, 0x41, 0x47, 0x80, 0x2e, 0x4b, 0xe6, 0x93, 0xe5, 0xd9, 0xd5, 0xbb, 0x7c, 0x44, 0xf3,
	0xdb, 0xd1, 0x2b, 0x0f, 0x30, 0xfe, 0x95, 0x1d, 0xdb, 0xde, 0x8f, 0x76, 0xd9, 0xab, 0x79, 0xb2,
	0x3c, 0xbb, 0xba, 0x78, 0x4e, 0xfc, 0x88, 0x46, 0x39, 0x12, 0x8b, 0xbf, 0x09, 0x3b, 0xdd, 0x8f,
	0xe1, 0x9c, 0x4d, 0x1b, 0xeb, 0x28, 0x4b, 0xe6, 0xc9, 0xf2, 0xb4, 0x0c, 0x6f, 0xaf, 0xf5, 0x16,
	0x29, 0xcc, 0x4a, 0xcb, 0xf0, 0xe6, 0x9f, 0xd8, 0xb9, 0x34, 0x1a, 0x3a, 0xaa, 0xc8, 0xb8, 0x4a,
	0x02, 0x52, 0x36, 0x99, 0x27, 0xcb, 0x59, 0x99, 0x46, 0xf9, 0xde, 0xb8, 0x5b, 0x88, 0x9c, 0x03,
	0x7c, 0x04, 0x7c, 0xe6, 0xa6, 0x91, 0x8b, 0xf2, 0xc0, 0x2d, 0xfe, 0x25, 0xec, 0x78, 0xa8, 0xc6,
	0x3f, 0xb0, 0x94, 0xb4, 0xdc, 0x56, 0xda, 0x37, 0x7a, 0x14, 0x26, 0x94, 0x99, 0x96, 0x33, 0x2f,
	0xde, 0x0d, 0x9a, 0x87, 0xc0, 0x80, 0xf4, 0x89, 0xca, 0x1b, 0x43, 0xbb, 0xd9, 0x28, 0xde, 0x6b,
	0xb9, 0xe5, 0x97, 0xec, 0x4d, 0x03, 0x02, 0x69, 0x0d, 0x82, 0x22, 0x35, 0x09, 0x54, 0xba, 0x57,
	0x03, 0xf6, 0x85, 0x5d, 0xb4, 0x62, 0x57, 0xe9, 0x6e, 0x63, 0xb4, 0x6a, 0xa8, 0x6a, 0x9d, 0x72,
	0xa1, 0x66, 0x5a, 0x9e, 0xb7, 0x62, 0x77, 0x37, 0xe8, 0x2b, 0xa7, 0x1c, 0xff, 0xcc, 0xde, 0x7a,
	0xd6, 0xe9, 0x27, 0xa8, 0x7a, 0x40, 0xcf, 0x66, 0x47, 0xa1, 0x5f, 0xda, 0x8a, 0xdd, 0x2f, 0xfd,
	0x04, 0x3f, 0x01, 0x57, 0x4e, 0x2d, 0x2e, 0x59, 0x7a, 0x63, 0xac, 0xdc, 0xfa, 0x55, 0x7e, 0xf7,
	0xab, 0x7c, 0xcf, 0x8e, 0x74, 0x57, 0xc3, 0x6e, 0xf8, 0x9d, 0xf8, 0x71, 0xa3, 0x58, 0x6e, 0x51,
	0xe5, 0xcd, 0x9f, 0x1e, 0xd0, 0x40, 0xad, 0x00, 0xf3, 0x8d, 0x58, 0xa3, 0x96, 0xf1, 0x2c, 0x5c,
	0x3e, 0x1c, 0xcf, 0x7e, 0x83, 0xbf, 0xbf, 0x29, 0x4d, 0xcd, 0xc3, 0x3a, 0x97, 0xb6, 0x2d, 0x0e,
	0x62, 0x45, 0x8c, 0x15, 0x31, 0x56, 0xbc, 0xbc, 0xb9, 0xf5, 0xeb, 0x60, 0x5c, 0xff, 0x0f, 0x00,
	0x00, 0xff, 0xff, 0x4a, 0xb3, 0xe3, 0xb3, 0x8e, 0x02, 0x00, 0x00,
}
